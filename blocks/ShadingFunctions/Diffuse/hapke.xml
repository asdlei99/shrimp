<shrimp name="HapkeLunar" type="function" description="Hapke-Lommel-Seeliger lunar surface BRDF." author="rconstruct">
    <input name="Kd" description="Diffuse light coefficient" type="float" default="0.8"/>
	<input name="sden" description="Surface density" type="float" default="0.6"/>
    <input name="fscat" description="Forward scattering" type="float" default="0.1"/>
    <input name="refl" description="Reflectivity" type="float" default="1.0"/>
	<input name="N" description="Surface normal" type="normal vector" default="normalize(N)"/>
	<input name="I" description="Direction of viewer" type="vector" default="normalize(I)"/>
	<output name="Ci" description="Shaded color" type="color"/>
	<include>shadingmodels.h</include>
	<code>
        $(Ci) = $(Kd) * Hapke( $(sden), $(fscat), $(refl), $(N), $(I) );
	</code>
    <usage>Based on Szymon Rusinkiewicz's implementation of the Hapke-Lommel-Seeliger lunar surface BRDF, with Schonberg backstattering and Hapke retrodirective function. The sden parameter controls the density of the surface. The fscat parameter, controls the forward scattering of the surface, and the refl parameter, the surface reflectivity.</usage>
</shrimp>
