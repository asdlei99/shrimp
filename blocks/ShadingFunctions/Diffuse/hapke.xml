<shrimp name="HapkeLunar" type="function" description="Hapke-Lommel-Seeliger lunar surface BRDF." author="rconstruct">
	<input name="Cdiff" description="Diffuse color" type="color" default="color(.5)"/>
    <input name="Kd" description="Diffuse light coefficient" type="float" default="0.8"/>
	<input name="sden" description="Surface density" type="float" default="0.6"/>
    <input name="fscat" description="Forward scattering" type="float" default="0.1"/>
    <input name="refl" description="Reflectivity" type="float" default="1.0"/>
	<input name="N" description="Surface normal" storage="varying" type="vector normal" default="normalize(N)"/>
	<input name="I" description="Direction of viewer" storage="varying" type="vector" default="normalize(I)"/>
	<output name="Ci" description="Shaded color" type="color"/>
	<rsl_include>rsl_shrimp_shadingmodels.h</rsl_include>
	<rsl_code>
		aov_surfacecolor += $(Cdiff);
		aov_diffuse += $(Kd) * Hapke( $(sden), $(fscat), $(refl), $(N), $(I) );
        $(Ci) = aov_surfacecolor * aov_diffuse;
	</rsl_code>
    <usage>Based on Szymon Rusinkiewicz&apos;s implementation of the Hapke-Lommel-Seeliger lunar surface BRDF, with Schonberg backstattering and Hapke retrodirective function. The &quot;sden&quot; parameter controls the density of the surface. The &quot;fscat&quot; parameter, controls the forward scattering of the surface, and the &quot;refl&quot; parameter, the surface reflectivity. The diffuse color value is passed to the &quot;aov_surfacecolor&quot;, and the diffuse value to the &quot;aov_diffuse&quot; AOV presets.</usage>
</shrimp>
