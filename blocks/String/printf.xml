<shrimp type="function" name="Printf" description="Prints values of variables" author="rconstruct">
	<input name="str" description="String to use, see usage" storage="uniform" type="string" default="&quot;Content of var =&quot;"/>
	<input name="var" description="Variable input" type_parent="val" type="color normal vector point matrix string float" default="0"/>
	<output name="val" description="Variable output" type="color normal vector point matrix string float"/>
	<rsl_code>
	
	#define $(blockname)_$(var:type) 1
	#ifdef $(blockname)_float
		printf( concat( $(str), " %f\n"), $(var) );
	#elif $(blockname)_color
		printf( concat( $(str), " %c\n"), $(var) );
	#elif $(blockname)_matrix
		printf( concat( $(str), " %m\n"), $(var) );
	#elif $(blockname)_string
		printf( concat( $(str), " %s\n"), $(var) );
	#else
		printf( concat( $(str), " %p\n"), $(var) );
	#endif /* $(blockname)_$(var:type) */
	#undef $(blockname)_$(var:type)
	
		$(val) = $(var);
		
	</rsl_code>
	<usage>Similar to the C &quot;printf&quot;, prints the contents of the specified variables into stdout. The formatting for the string uses &quot;%f&quot;, &quot;%c&quot;, &quot;%p&quot;, &quot;%m&quot; and &quot;%s&quot;, for variables of type float, color, normal/vector/point, matrix, and string. The string has the variable type and a newline concatenated. See block code for details.</usage>
</shrimp>
