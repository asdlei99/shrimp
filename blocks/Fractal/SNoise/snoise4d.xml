<shrimp type="function" name="SNoise4D" description="Signed 4 dimensional Perlin noise function" author="rconstruct">
	<input name="p" description="Point to sample noise at" storage="varying" type="point" default="P"/>
	<input name="t" description="4th dimension value" storage="uniform" type="float" default="time"/>
	<input name="amplitude" description="Amplitude of noise" type="float" default="1"/>
	<output name="val" description="Noise value at (p,t)" type="color point vector float"/>
	<rsl_include>rsl_shrimp_fractal.h</rsl_include>
	<rsl_code>
	#define $(blockname)_$(val:type)
	#ifdef $(blockname)_float
		$(val) = $(amplitude) * snoisexy( $(p), $(t) );
	#else
		$(val) = $(amplitude) * $(val:type) vsnoisexy( $(p), $(t) );
	#endif
	#undef $(blockname)_$(val:type)
	</rsl_code>
	<usage>4 dimensional signed noise. SNoise is exactly like Noise, except that the result defaults to the range [-&quot;amplitude&quot;,&quot;amplitude&quot;] rather than [0,&quot;amplitude&quot;]. The average value is therefore zero. The parameter &quot;amplitude&quot; defaults to 1, so the noise range defaults to [-1,1]. The 4th dimensional parameter defaults to the global variable &quot;time&quot;, the current shutter time as defined by RiShutter. Note that &quot;time&quot;&apos;s storage class is uniform.</usage>
</shrimp>
