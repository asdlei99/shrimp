<shrimp type="function" name="Turbulence2D" description="2 dimensional turbulence function." author="rconstruct">
	<input name="x" description="x coordinate to sample turbulence at" type="float" default="s"/>
	<input name="y" description="y coordinate to sample turbulence at" type="float" default="t"/>
	<input name="fwidth" description="Filter width for antialiasing" type="float" default="0"/>
	<input name="octaves" description="Maximum octaves of noise" type="float" default="5"/>
	<input name="lacunarity" description="Controls the smoothness of the turbulence" type="float" default="2.17"/>
	<input name="gain" description="Controls the contrast of the turbulence" type="float"  default="0.5"/>
	<input name="amplitude" description="Amplitude of turbulence" type="float" default="1"/>
	<output name="val" description="turbulence value at (x,y)" type="float color vector point"/>
	<include>fractal.h</include>
	<code>
	#define $(val)_$(val:type)
	#ifdef $(val)_float
		$(val) = $(amplitude) * turbulence( $(x), $(y), $(fwidth),
										$(octaves), $(lacunarity), $(gain));
	#else
		$(val) = $(amplitude) * $(val:type) vturbulence( $(x), $(y), $(fwidth),
										$(octaves), $(lacunarity), $(gain));
	#endif

	</code>
	<usage>This is the Perlin turbulence function.
	</usage> 
</shrimp>
