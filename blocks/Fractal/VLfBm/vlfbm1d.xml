<shrimp type="function" name="VLfBm1D" description="1 dimensional fractional Brownian motion." author="rconstruct">
	<input name="x" description="value to sample VLfBm at" type="float" default="s"/>
	<input name="fwidth" description="Filter width for antialiasing" type="float" default="0"/>
	<input name="octaves" description="Maximum octaves of noise" type="float" default="5"/>
	<input name="lacunarity" description="Controls the smoothness of the VLfBm" type="float" default="2.17"/>
	<input name="scale" description="VL scale" type="float" default="0"/>
	<input name="gain" description="Controls the contrast of the VLfBm" type="float" default="0.5"/>
	<input name="amplitude" description="Amplitude of VLfBm" type="float" default="1"/>
	<output name="val" description="VLfBm value at x" type="float color point vector normal"/>
	<include>fractal.h</include>
	<code>
	#define $(val)_$(val:type)
	#ifdef $(val)_float
		$(val) = $(amplitude) * VLfBm( $(x), $(fwidth), $(octaves), $(lacunarity),$(gain),$(scale) );
	#else
		$(val) = $(amplitude) * $(val:type) ( vector VLvfBm( $(x), $(fwidth),
					$(octaves), $(lacunarity),$(gain),$(scale) ) );		
	#endif
	</code>
	<usage>VLfBm is a sumation of noises at different frequencies, using VLNoise instead of signed noise. Note that the output is not clamped and may exceed +1 or -1.
	</usage> 
</shrimp>
