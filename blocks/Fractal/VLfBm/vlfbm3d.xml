<shrimp type="function" name="VLfBm3D" description="3 dimensional VLfBm" author="rconstruct">
	<input name="p" description="Point to sample VLfBm at" storage="varying" type="point" default="P"/>
	<input name="fwidth" description="Filter width for antialiasing" type="float" default="0"/>
	<input name="octaves" description="Maximum octaves of noise" storage="uniform" type="float" default="5"/>
	<input name="lacunarity" description="Controls the smoothness of the VLfBm" storage="uniform" type="float" default="2.17"/>
	<input name="scale" description="VL scale" storage="uniform" type="float" default="1"/>
	<input name="gain" description="Controls the contrast of the VLfBm" storage="uniform" type="float" default="0.5"/>
	<input name="amplitude" description="Amplitude of VLfBm" type="float" default="1"/>
	<output name="val" description="VLfBm value at p" type="color point vector normal float"/>
	<rsl_include>rsl_shrimp_fractal.h</rsl_include>
	<rsl_code>
	#define $(blockname)_$(val:type)
	#ifdef $(blockname)_float
		$(val) = $(amplitude) * VLfBm( $(p), $(fwidth), $(octaves),
					$(lacunarity), $(gain), $(scale) );
	#else
		$(val) = $(amplitude) * $(val:type) ( vector VLvfBm( $(p), $(fwidth),
					$(octaves), $(lacunarity), $(gain), $(scale) ) );
	#endif
	#undef $(blockname)_$(val:type)
	</rsl_code>
	<usage>3 dimensional Variable Lacunarity fractional Brownian motion is a sumation of noises at different frequencies, using VLNoise instead of signed noise. Note that the output is not clamped and may exceed +1 or -1.</usage>
</shrimp>
