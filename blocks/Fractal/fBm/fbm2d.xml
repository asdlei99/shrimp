<shrimp type="function" name="fBm2D" description="2 dimensional fractional Brownian motion." author="rconstruct">
	<input name="x" description="x coordinate to sample fBm at" type="float" default="s"/>
	<input name="y" description="y coordinate to sample fBm at" type="float" default="t"/>
	<input name="fwidth" description="Filter width for antialiasing" type="float" default="0"/>
	<input name="octaves" description="Maximum octaves of noise" type="float" default="5"/>
	<input name="lacunarity" description="Controls the smoothness of the fBm" type="float" default="2.17"/>
	<input name="gain" description="Controls the contrast of the fBm" type="float" default="0.5"/>
	<input name="amplitude" description="Amplitude of fBm" type="float" default="1"/>
	<output name="val" description="fBm value at (x,y)" type="float color point vector normal"/>
	<include>fractal.h</include>
	<rsl_code>
	#define $(val)_$(val:type)
	#ifdef $(val)_float
		$(val) = $(amplitude) * fBm( $(x), $(y), $(fwidth), $(octaves),
					$(lacunarity),$(gain) );
	#else
		$(val) = $(amplitude) * $(val:type) (vector vfBm( $(x), $(y), $(fwidth),
					$(octaves), $(lacunarity),$(gain) ) );		
	#endif
	</rsl_code>
	<usage>fBm is a sumation of noises at different frequencies. Note that the output is not clamped and may exceed +1 or -1.
	</usage> 
</shrimp>
