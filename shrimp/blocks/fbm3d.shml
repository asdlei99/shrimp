<shrimp type="function" name="fBm3D" description="3 dimensional fractional Brownian motion.">
	<input name="p" description="point to sample fBm at" type="point"/>
	<input name="fwidth" description="Filter width for antialiasing" default="0"/>
	<input name="octaves" description="Maximum octaves of noise" default="5"/>
	<input name="lacunarity" description="Controls the smoothness of the fBm" default="2.17"/>
	<input name="gain" description="Controls the contrast of the fBm" default="0.5"/>
	<input name="amplitude" description="Amplitude of fBm"/>
	<output name="val" description="fBm value at p" type="float point vector normal"/>
	<include>fractal.h</include>
	<code>
	#define $(val)_$(var_type)
	#ifdef $(val)_float
		$(val) = $(amplitude) * fBm( $(p), $(fwidth), $(octaves), $(lacunarity),$(gain) );
	#else
		$(val) = $(amplitude) * $(var_type) vfBm( $(p), $(fwidth), $(octaves), $(lacunarity),$(gain) );		
	#endif
	</code>
	<usage>fBm is a sumation of noises at different frequencies. Note that the output is not clamped and may exceed +1 or -1.
	</usage> 
</shrimp>